{"qas": [{"question": "How is the USB data transmitted?", "id": "572801e6ff5b5019007d9ad6", "answers": [{"text": "by toggling the data lines between the J state and the opposite K state", "answer_start": 24}], "is_impossible": false}, {"question": "What does USB use to encode data?", "id": "572801e6ff5b5019007d9ad7", "answers": [{"text": "the NRZI line coding", "answer_start": 120}], "is_impossible": false}, {"question": "To ensure a minimum density of signal transitions  remains in the bitsream, what does USB use?", "id": "572801e6ff5b5019007d9ad8", "answers": [{"text": "bit stuffing", "answer_start": 366}], "is_impossible": false}], "context": "USB data is transmitted <a0_0>by toggling the data lines between the J state and the opposite K state<a0_0/>. USB encodes data using <a1_0>the NRZI line coding<a1_0/>; a 0 bit is transmitted by toggling the data lines from J to K or vice versa, while a 1 bit is transmitted by leaving the data lines as-is. To ensure a minimum density of signal transitions remains in the bitstream, USB uses <a2_0>bit stuffing<a2_0/>; an extra 0 bit is inserted into the data stream after any appearance of six consecutive 1 bits. Seven consecutive received 1 bits is always an error. USB 3.0 has introduced additional data transmission encodings."}