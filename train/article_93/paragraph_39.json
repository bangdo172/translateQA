{"qas": [{"question": "Which computer is the Harvard architecture modeled after?", "id": "56fdedfb761e401900d28c53", "answers": [{"text": "Harvard Mark I computer", "answer_start": 1165}], "is_impossible": false}, {"question": "A computer that stores its program in memory and kept separate from the data is called what?", "id": "56fdedfb761e401900d28c54", "answers": [{"text": "the Harvard architecture", "answer_start": 1130}], "is_impossible": false}], "context": "In most computers, individual instructions are stored as machine code with each instruction being given a unique number (its operation code or opcode for short). The command to add two numbers together would have one opcode; the command to multiply them would have a different opcode, and so on. The simplest computers are able to perform any of a handful of different instructions; the more complex computers have several hundred to choose from, each with a unique numerical code. Since the computer's memory is able to store numbers, it can also store the instruction codes. This leads to the important fact that entire programs (which are just lists of these instructions) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data. The fundamental concept of storing programs in the computer's memory alongside the data they operate on is the crux of the von Neumann, or stored program[citation needed], architecture. In some cases, a computer might store some or all of its program in memory that is kept separate from the data it operates on. This is called <a1_0>the Harvard architecture<a1_0/> after the <a0_0>Harvard Mark I computer<a0_0/>. Modern von Neumann computers display some traits of the Harvard architecture in their designs, such as in CPU caches."}