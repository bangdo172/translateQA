{"qas": [{"question": "Although software developers are unable to test everything, what do they run to keep the testing to a minimum? ", "id": "5729141f6aef051400154a3a", "answers": [{"text": "use combinatorial test design", "answer_start": 56}], "is_impossible": false}, {"question": "What does the use of combinatorial testing consist of?", "id": "5729141f6aef051400154a3b", "answers": [{"text": "get greater test coverage with fewer tests", "answer_start": 207}], "is_impossible": false}, {"question": "What two types of testing are involved with combinatorial testing as mentioned here?", "id": "5729141f6aef051400154a3c", "answers": [{"text": "speed or test depth", "answer_start": 280}], "is_impossible": false}, {"plausible_answers": [{"text": "combinatorial test", "answer_start": 60}], "question": "What test do firmware developers use to find out how to keep testing to a minimum?", "id": "5a7b7a0421c2de001afea052", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "greater test coverage", "answer_start": 211}], "question": "Combinatorial test design does not allow users to get what?", "id": "5a7b7a0421c2de001afea053", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "their test cases.", "answer_start": 383}], "question": "Unstructured variations can be built into what items?", "id": "5a7b7a0421c2de001afea054", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "requirements coverage", "answer_start": 481}], "question": "\"Coverage\" is referring to combined coverage but not what?", "id": "5a7b7a0421c2de001afea055", "answers": [], "is_impossible": true}], "context": "Software developers can't test everything, but they can <a0_0>use <b3_0>combinatorial test<b3_0/> design<a0_0/> to identify the minimum number of tests needed to get the coverage they want. Combinatorial test design enables users to <a1_0>get <b4_0>greater test coverage<b4_0/> with fewer tests<a1_0/>. Whether they are looking for <a2_0>speed or test depth<a2_0/>, they can use combinatorial test design methods to build structured variation into <b5_0>their test cases.<b5_0/> Note that \"coverage\", as used here, is referring to combinatorial coverage, not <b6_0>requirements coverage<b6_0/>."}