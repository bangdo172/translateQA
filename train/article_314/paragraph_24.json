{"qas": [{"question": "Which two current movements adhere to the \"test-driven software development\"?", "id": "57295082af94a219006aa295", "answers": [{"text": "extreme programming and the agile software development", "answer_start": 56}], "is_impossible": false}, {"question": "Under the development of agile software and extreme programing what is written first?", "id": "57295082af94a219006aa296", "answers": [{"text": "unit tests are written first", "answer_start": 192}], "is_impossible": false}, {"question": "What is the goal of Unit testing?", "id": "57295082af94a219006aa297", "answers": [{"text": "achieve continuous integration where software updates can be published to the public frequently", "answer_start": 902}], "is_impossible": false}, {"plausible_answers": [{"text": "extreme programming and the agile software development", "answer_start": 56}], "question": "Which two old movements adhere to the \"test-driven software development?\"", "id": "5a7b9b6521c2de001afea1ae", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "unit tests are written first", "answer_start": 192}], "question": "Under the development of fragile software and extreme programming what is written first?", "id": "5a7b9b6521c2de001afea1af", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "published to the public frequently", "answer_start": 963}], "question": "The goal of unit testing is to achieve discontinuous integration where software updates can be what?", "id": "5a7b9b6521c2de001afea1b0", "answers": [], "is_impossible": true}], "context": "In contrast, some emerging software disciplines such as <a0_0><b3_0>extreme programming and the agile software development<b3_0/><a0_0/> movement, adhere to a \"test-driven software development\" model. In this process, <a1_0><b4_0>unit tests are written first<b4_0/><a1_0/>, by the software engineers (often with pair programming in the extreme programming methodology). Of course these tests fail initially; as they are expected to. Then as code is written it passes incrementally larger portions of the test suites. The test suites are continuously updated as new failure conditions and corner cases are discovered, and they are integrated with any regression tests that are developed. Unit tests are maintained along with the rest of the software source code and generally integrated into the build process (with inherently interactive tests being relegated to a partially manual build acceptance process). The ultimate goal of this test process is to <a2_0>achieve continuous integration where software updates can be <b5_0>published to the public frequently<b5_0/><a2_0/>.  "}