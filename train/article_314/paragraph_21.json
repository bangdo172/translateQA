{"qas": [{"question": "What method is used to cause a system to fail?", "id": "5729429a6aef051400154c18", "answers": [{"text": "Destructive testing", "answer_start": 0}], "is_impossible": false}, {"question": "What does Destructive testing verify?", "id": "5729429a6aef051400154c19", "answers": [{"text": "software functions properly even when it receives invalid or unexpected inputs", "answer_start": 97}], "is_impossible": false}, {"question": "What is one example of failure testing?", "id": "5729429a6aef051400154c1a", "answers": [{"text": "Software fault injection", "answer_start": 281}], "is_impossible": false}, {"plausible_answers": [{"text": "attempts to cause the software or a sub-system to fail", "answer_start": 20}], "question": "Destruction testing does what?", "id": "5a7b97a121c2de001afea18c", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "software functions properly even when it receives invalid or unexpected inputs,", "answer_start": 97}], "question": "What does destruction testing verify?", "id": "5a7b97a121c2de001afea18d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "fuzzing", "answer_start": 322}], "question": "What is an example of software fault injecture?", "id": "5a7b97a121c2de001afea18e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "perform destructive testing.", "answer_start": 539}], "question": "There are very few open-source and free tools that do what?", "id": "5a7b97a121c2de001afea18f", "answers": [], "is_impossible": true}], "context": "<a0_0>Destructive testing<a0_0/> <b3_0>attempts to cause the software or a sub-system to fail<b3_0/>. It verifies that the <a1_0><b4_0>software functions properly even when it receives invalid or unexpected inputs<a1_0/>,<b4_0/> thereby establishing the robustness of input validation and error-management routines.[citation needed] <a2_0>Software fault injection<a2_0/>, in the form of <b5_0>fuzzing<b5_0/>, is an example of failure testing. Various commercial non-functional testing tools are linked from the software fault injection page; there are also numerous open-source and free software tools available that <b6_0>perform destructive testing."}